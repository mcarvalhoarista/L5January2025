---

# Credentials for CVP and EOS Switches
ansible_user: cvpadmin
# ansible_password: arista123
ansible_password: arista123
ansible_network_os: arista.eos.eos
# Configure privilege escalation
ansible_become: true
ansible_become_method: enable
# HTTPAPI configuration
ansible_connection: httpapi
ansible_httpapi_port: 443
ansible_httpapi_use_ssl: true
ansible_httpapi_validate_certs: false
ansible_python_interpreter: $(which python3)
avd_data_conversion_mode: error
avd_data_validation_mode: error

# Cloud Vision server information
cvp_token_file: /tmp/token
cvp_instance_ips:
  - 10.88.160.63

# update overlay mtu for real deployment -> 9100
custom_structured_configuration_interface_defaults:
  mtu: 1500
  ethernet:
    shutdown: true

custom_structured_configuration_switchport_default:
  mode: routed

custom_structured_configuration_banners:
  login: |
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    !!                                                                        !!
    !! IF THE COMPANY HAS NOT AUTHORISED YOUR ACCESS TO THIS SYSTEM YOU       !!
    !! WILL COMMIT A CRIMINAL OFFENCE IF YOU DO NOT IMMEDIATELY DISCONNECT.   !!
    !!                                                                        !!
    !! UNAUTHORISED ACCESS IS STRICTLY FORBIDDEN AND A DISCIPLINARY OFFENCE.  !!
    !!                                                                        !!
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

    EOF

# Syslog
logging:
  vrfs:
    - name: MGMT
      source_interface: Management1
      hosts:
        - name: 10.200.0.108
        - name: 10.200.1.108

# CVP node variables
cv_collection: v3
execute_tasks: true

# Local Users
local_users:
  - name: arista
    privilege: 15
    role: network-admin
    # sha512_password: "{{ ansible_password | password_hash('sha512', salt='arista') }}"
    sha512_password: $6$q8jlkf.096QMWJgE$TdjJmjxqo2jnta2QzkjbrWpZ2PC7e20acNGjT6xQaCDF3lh1X7As680cq6PXj8RXDcD6BehZHueqJK/W9.2zG.
    # ssh_key: "{{ lookup('ansible.builtin.file', '~/.ssh/id_rsa.pub') }}"
  - name: cvpadmin
    privilege: 15
    role: network-admin
    sha512_password: $6$PyJWbjPrhxpt9MvC$kLSV2naOFChW09CqBcZfVSOBpv.3v0NM7NAbGoQINfoTJlLb/LfoToRkCcGMeSDENrUa193Ba/NeB2pS3J9XP1
  - name: marcelo
    privilege: 15
    role: network-admin
    sha512_password: $6$JOlaFRui.uKQAgcY$F.A6VZCIcIlbRMrk//U2.q9ucyl95ymC1dGz9BLpwl3NkIhLbOkCh.N.nYaiLBIUdz3mXzAAutF/APAAtamUB.


# Management SSH
custom_structured_configuration_management_ssh:
  idle_timeout: 5
  enable: true
  vrfs:
    - name: MGMT
      enable: true


# OOB Management network default gateway.
default_mgmt_method: oob
mgmt_interface_description: Management_Interface
mgmt_interface: Management1
mgmt_interface_vrf: MGMT
mgmt_gateway: 10.88.169.129

# AAA
aaa_authorization:
  exec:
    default: local

custom_structured_configuration_aaa_authentication:
  login:
    default: local
    console: local
  policies:
    on_failure_log: true
    on_success_log: true

custom_structured_configuration_aaa_authorization:
  exec:
    default: local
  config_commands: true
  serial_console: true
  commands:
    all_default: local

mac_address_table:
  aging_time: 1800

# NTP Servers IP or DNS name, first NTP server will be preferred, and sourced from Management VRF
ntp:
  servers:
    - name: 0.pool.ntp.org
      iburst: true
      local_interface: Management1
      vrf: MGMT

custom_structured_configuration_ip_tacacs_source_interfaces:
  - name: Management1
    vrf: MGMT

# Domain/DNS
dns_domain: marcelo.lab

# TerminAttr
daemon_terminattr:
  # Address of the gRPC server on CloudVision
  # TCP 9910 is used on on-prem
  # TCP 443 is used on CV as a Service
  cvaddrs: # For single cluster
    - 10.88.160.63:9910
  # Authentication scheme used to connect to CloudVision
  cvauth:
    method: token
    token_file: "/tmp/token"
  # Exclude paths from Sysdb on the ingest side
  ingestexclude: /Sysdb/cell/1/agent,/Sysdb/cell/2/agent
  # Exclude paths from the shared memory table
  smashexcludes: ale,flexCounter,hardware,kni,pulse,strata

# Point to Point Links MTU Override for Lab
p2p_uplinks_mtu: 1500

# Set IPv4 Underlay Routing and EVPN Overlay Routing to use eBGP
underlay_routing_protocol: ebgp
overlay_routing_protocol: ebgp
underlay_rfc5549: true

# Enable RT membership
evpn_overlay_bgp_rtc: true

custom_structured_configuration_standard_access_lists:
  - name: SNMP-ACL
    sequence_numbers:
      - sequence: 10
        action: "permit 0.0.0.0/0"
  - name: CVP-ACL
    sequence_numbers:
      - sequence: 10
        action: "permit 0.0.0.0/0"


# TODO - probably need a default ACL for this in eos_designs
custom_structured_configuration_management_api_http:
  enable_http: false
  enable_https: true
  enable_vrfs:
    - name: MGMT
      access_group: CVP-ACL

internal_vlan_order:
  allocation: ascending
  range:
    beginning: 3500
    ending: 4000

timezone: US/Central

# Configure password authentication for BGP peerings
bgp_peer_groups: 
  evpn_overlay_peers:
    password: Q4fqtbqcZ7oQuKfuWtNGRQ==
  ipv4_underlay_peers:
    password: 7x4B4rnJhZB438m9+BrBfQ==
  mlag_ipv4_underlay_peer:
    password: 4b21pAdCvWeAqpcKDFMdWw==

# L3 Edge port definitions. This can be any port in the entire Fabric, where IP interfaces are defined.
l3_edge:
  # Define a new IP pool that will be used to assign IP addresses to L3 Edge interfaces.
  p2p_links_ip_pools:
    - name: S1_to_S2_IP_pool
      ipv4_pool: 172.16.255.0/24
  # Define a new link profile which will match the IP pool, the used ASNs and include the defined interface into underlay routing
  p2p_links_profiles:
    - name: S1_to_S2_profile
      ip_pool: S1_to_S2_IP_pool
      as: [ 65103, 65203 ]
      include_in_underlay_protocol: true
  # Define each P2P L3 link and link the nodes, the interfaces and the profile used.
  p2p_links:
    - id: 1
      nodes: [ DC1-BL1, DC2-BL1 ]
      interfaces: [ Ethernet4, Ethernet4 ]
      profile: S1_to_S2_profile
    - id: 2
      nodes: [ DC1-BL2, DC2-BL2 ]
      interfaces: [ Ethernet4, Ethernet4 ]
      profile: S1_to_S2_profile

